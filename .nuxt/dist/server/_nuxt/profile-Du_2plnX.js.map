{"version":3,"file":"profile-Du_2plnX.js","sources":["../../../../pages/profile.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-3xl mx-auto\">\r\n    <div class=\"text-center mb-8\">\r\n      <h1 class=\"text-3xl font-bold text-gray-800 dark:text-white mb-2\">Your Profile</h1>\r\n      <p class=\"text-gray-600 dark:text-gray-300\">Manage your account settings</p>\r\n    </div>\r\n\r\n    <!-- Loading State -->\r\n    <div v-if=\"loading\" class=\"text-center py-8\">\r\n      <div class=\"inline-block animate-spin rounded-full h-8 w-8 border-t-2 border-b-2 border-primary-600\"></div>\r\n      <p class=\"mt-2 text-gray-600 dark:text-gray-400\">Loading your profile...</p>\r\n    </div>\r\n\r\n    <!-- Error State -->\r\n    <div v-else-if=\"error\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n      {{ error }}\r\n    </div>\r\n\r\n    <!-- Profile Content -->\r\n    <div v-else class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n      <!-- Profile Picture Section -->\r\n      <div class=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md border border-gray-200 dark:border-gray-700 p-6 md:col-span-1\">\r\n        <h2 class=\"text-xl font-bold text-gray-800 dark:text-white mb-4\">Profile Picture</h2>\r\n\r\n        <div class=\"flex flex-col items-center\">\r\n          <div class=\"h-32 w-32 rounded-full overflow-hidden border-2 border-primary-500 mb-4 flex items-center justify-center bg-gray-200 dark:bg-gray-700\">\r\n            <img \r\n              v-if=\"profilePictureUrl !== '/default-avatar.png' && !imageError\"\r\n              :src=\"profilePictureUrl\" \r\n              alt=\"Profile\" \r\n              class=\"h-full w-full object-cover\"\r\n              @error=\"handleImageError\"\r\n            />\r\n            <svg v-else xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\" class=\"h-12 w-12 text-gray-500 dark:text-gray-400\">\r\n              <path fill=\"currentColor\" d=\"M224 256A128 128 0 1 0 224 0a128 128 0 1 0 0 256zm-45.7 48C79.8 304 0 383.8 0 482.3C0 498.7 13.3 512 29.7 512l388.6 0c16.4 0 29.7-13.3 29.7-29.7C448 383.8 368.2 304 269.7 304l-91.4 0z\"/>\r\n            </svg>\r\n          </div>\r\n\r\n          <div class=\"w-full\">\r\n            <!-- Picture Update Error -->\r\n            <div v-if=\"pictureUpdateError\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n              {{ pictureUpdateError }}\r\n            </div>\r\n\r\n            <!-- Success Message -->\r\n            <div v-if=\"pictureUpdateSuccess\" class=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\r\n              Profile picture updated successfully!\r\n            </div>\r\n\r\n            <!-- File Upload Section -->\r\n            <div class=\"mb-4\">\r\n              <label for=\"profilePictureFile\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">Upload Image</label>\r\n              <div class=\"relative\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"profilePictureFile\"\r\n                  ref=\"fileInput\"\r\n                  @change=\"handleFileChange\"\r\n                  accept=\"image/*\"\r\n                  class=\"absolute inset-0 w-full h-full opacity-0 cursor-pointer z-10\"\r\n                />\r\n                <div class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500 flex items-center\">\r\n                  <span v-if=\"selectedFile\" class=\"truncate\">{{ selectedFile.name }}</span>\r\n                  <span v-else class=\"text-gray-500 dark:text-gray-400\">Choose a file...</span>\r\n                  <button type=\"button\" class=\"ml-auto bg-gray-200 dark:bg-gray-600 hover:bg-gray-300 dark:hover:bg-gray-500 text-gray-700 dark:text-gray-200 px-3 py-1 rounded-lg text-sm\">\r\n                    Browse\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              <p class=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">Supported formats: JPG, PNG, GIF</p>\r\n            </div>\r\n\r\n            <button \r\n              @click=\"updatePicture\"\r\n              class=\"w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-xl transition-colors\"\r\n              :disabled=\"!selectedFile\"\r\n            >\r\n              Update Picture\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Profile Information Section -->\r\n      <div class=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md border border-gray-200 dark:border-gray-700 p-6 md:col-span-2\">\r\n        <h2 class=\"text-xl font-bold text-gray-800 dark:text-white mb-4\">Profile Information</h2>\r\n\r\n        <form @submit.prevent=\"updateProfile\">\r\n          <!-- Success Message -->\r\n          <div v-if=\"profileUpdateSuccess\" class=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\r\n            Profile updated successfully!\r\n          </div>\r\n\r\n          <!-- Error Message -->\r\n          <div v-if=\"profileUpdateError\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n            {{ profileUpdateError }}\r\n          </div>\r\n\r\n          <!-- Username Field -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"username\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">Username</label>\r\n            <input\r\n              v-model=\"username\"\r\n              type=\"text\"\r\n              id=\"username\"\r\n              class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Your username\"\r\n              required\r\n              minlength=\"3\"\r\n              maxlength=\"30\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Email Field -->\r\n          <div class=\"mb-6\">\r\n            <label for=\"email\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">Email</label>\r\n            <input\r\n              v-model=\"email\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Your email\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <!-- Submit Button -->\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-4 rounded-xl transition-colors mb-4\"\r\n            :disabled=\"!isProfileChanged\"\r\n          >\r\n            Save Changes\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Change Password Section -->\r\n      <div class=\"bg-white dark:bg-gray-800 rounded-2xl shadow-md border border-gray-200 dark:border-gray-700 p-6 md:col-span-3\">\r\n        <h2 class=\"text-xl font-bold text-gray-800 dark:text-white mb-4\">Change Password</h2>\r\n\r\n        <form @submit.prevent=\"changeUserPassword\">\r\n          <!-- Success Message -->\r\n          <div v-if=\"passwordChangeSuccess\" class=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-4\">\r\n            Password changed successfully!\r\n          </div>\r\n\r\n          <!-- Error Message -->\r\n          <div v-if=\"passwordChangeError\" class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\r\n            {{ passwordChangeError }}\r\n          </div>\r\n\r\n          <!-- Current Password Field -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"currentPassword\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">Current Password</label>\r\n            <input\r\n              v-model=\"currentPassword\"\r\n              type=\"password\"\r\n              id=\"currentPassword\"\r\n              class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Enter your current password\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <!-- New Password Field -->\r\n          <div class=\"mb-4\">\r\n            <label for=\"newPassword\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">New Password</label>\r\n            <input\r\n              v-model=\"newPassword\"\r\n              type=\"password\"\r\n              id=\"newPassword\"\r\n              class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Enter your new password\"\r\n              required\r\n              minlength=\"6\"\r\n            />\r\n          </div>\r\n\r\n          <!-- Confirm New Password Field -->\r\n          <div class=\"mb-6\">\r\n            <label for=\"confirmPassword\" class=\"block text-gray-700 dark:text-gray-300 mb-2\">Confirm New Password</label>\r\n            <input\r\n              v-model=\"confirmPassword\"\r\n              type=\"password\"\r\n              id=\"confirmPassword\"\r\n              class=\"w-full p-3 border border-gray-300 dark:border-gray-600 rounded-xl bg-white dark:bg-gray-700 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary-500\"\r\n              placeholder=\"Confirm your new password\"\r\n              required\r\n            />\r\n            <p v-if=\"passwordMismatch\" class=\"text-red-500 text-sm mt-1\">Passwords do not match</p>\r\n          </div>\r\n\r\n          <!-- Submit Button -->\r\n          <button\r\n            type=\"submit\"\r\n            class=\"w-full bg-primary-600 hover:bg-primary-700 text-white font-medium py-3 px-4 rounded-xl transition-colors\"\r\n            :disabled=\"!isPasswordValid\"\r\n          >\r\n            Change Password\r\n          </button>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Back to Dashboard Button and Logout Button -->\r\n      <div class=\"md:col-span-3 text-center mt-4 flex justify-center space-x-4\">\r\n        <NuxtLink \r\n          to=\"/dashboard\" \r\n          class=\"inline-block bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-800 dark:text-white font-medium py-2 px-6 rounded-xl transition-colors\"\r\n        >\r\n          Back to Dashboard\r\n        </NuxtLink>\r\n        <button \r\n          @click=\"handleLogout\" \r\n          class=\"inline-block bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-6 rounded-xl transition-colors\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport { useAuth } from '~/composables/useAuth';\r\nimport { useApi } from '~/composables/useApi';\r\nimport { useRouter } from 'nuxt/app';\r\n\r\n// Define page metadata for SEO\r\ndefinePageMeta({\r\n  title: 'Profile - TypingRush',\r\n  description: 'Manage your TypingRush profile and account settings'\r\n});\r\n\r\nconst router = useRouter();\r\nconst { user, isAuthenticated, fetchUser, logout } = useAuth();\r\nconst { loading, error: apiError, getUserProfile, updateUserProfile, updateProfilePicture, uploadProfilePicture, changePassword, getProfilePictureUrl } = useApi();\r\n\r\n// Specific error states\r\nconst error = ref(null);\r\nconst profileUpdateError = ref(null);\r\nconst pictureUpdateError = ref(null);\r\nconst passwordChangeError = ref(null);\r\n\r\n// Form data\r\nconst username = ref('');\r\nconst email = ref('');\r\nconst profilePicture = ref('');\r\nconst currentPassword = ref('');\r\nconst newPassword = ref('');\r\nconst confirmPassword = ref('');\r\nconst selectedFile = ref(null);\r\nconst fileInput = ref(null);\r\n\r\n// Success states\r\nconst profileUpdateSuccess = ref(false);\r\nconst pictureUpdateSuccess = ref(false);\r\nconst passwordChangeSuccess = ref(false);\r\n\r\n// Image error state\r\nconst imageError = ref(false);\r\n\r\n// Handle image loading errors\r\nfunction handleImageError() {\r\n  imageError.value = true;\r\n}\r\n\r\n// Handle file selection\r\nfunction handleFileChange(event) {\r\n  const files = event.target.files;\r\n  if (files.length > 0) {\r\n    selectedFile.value = files[0];\r\n  } else {\r\n    selectedFile.value = null;\r\n  }\r\n}\r\n\r\n// Computed properties\r\nconst isProfileChanged = computed(() => {\r\n  return username.value !== user.value?.username || email.value !== user.value?.email;\r\n});\r\n\r\nconst passwordMismatch = computed(() => {\r\n  return newPassword.value && confirmPassword.value && newPassword.value !== confirmPassword.value;\r\n});\r\n\r\nconst isPasswordValid = computed(() => {\r\n  return currentPassword.value && \r\n         newPassword.value && \r\n         confirmPassword.value && \r\n         newPassword.value === confirmPassword.value &&\r\n         newPassword.value.length >= 6;\r\n});\r\n\r\n// Compute the profile picture URL\r\nconst profilePictureUrl = computed(() => {\r\n  // If no profile picture, return default\r\n  if (!profilePicture.value) return '/default-avatar.png';\r\n\r\n  // If profilePicture is an object with data property that's a base64 string, use it directly\r\n  if (typeof profilePicture.value === 'object' && \r\n      profilePicture.value.data && \r\n      typeof profilePicture.value.data === 'string' && \r\n      profilePicture.value.data.startsWith('data:')) {\r\n    return profilePicture.value.data;\r\n  }\r\n\r\n  // If profilePicture has fileId, use the getProfilePictureUrl function\r\n  if (typeof profilePicture.value === 'object' && profilePicture.value.fileId) {\r\n    // Create a temporary user object with the necessary properties\r\n    const tempUser = {\r\n      _id: user.value?._id,\r\n      profilePicture: {\r\n        fileId: profilePicture.value.fileId\r\n      }\r\n    };\r\n    return getProfilePictureUrl(tempUser);\r\n  }\r\n\r\n  // If user has an ID, use the getProfilePictureUrl function with the user ID\r\n  if (user.value?._id) {\r\n    return getProfilePictureUrl(user.value._id);\r\n  }\r\n\r\n  // If profilePicture is a string, use it directly\r\n  if (typeof profilePicture.value === 'string') {\r\n    return profilePicture.value;\r\n  }\r\n\r\n  return '/default-avatar.png';\r\n});\r\n\r\n// Load user profile\r\nasync function loadUserProfile() {\r\n  error.value = null;\r\n  try {\r\n    const profile = await getUserProfile();\r\n    if (profile) {\r\n      username.value = profile.username;\r\n      email.value = profile.email;\r\n      // Store the profilePicture, which could be a string or an object with a path property\r\n      profilePicture.value = profile.profilePicture;\r\n    }\r\n  } catch (err) {\r\n    console.error('Error loading user profile:', err);\r\n    error.value = apiError.value || 'Failed to load profile. Please try again.';\r\n  }\r\n}\r\n\r\n// Update profile\r\nasync function updateProfile() {\r\n  profileUpdateSuccess.value = false;\r\n  profileUpdateError.value = null;\r\n\r\n  try {\r\n    const updatedProfile = await updateUserProfile({\r\n      username: username.value,\r\n      email: email.value\r\n    });\r\n\r\n    if (updatedProfile) {\r\n      // Update local user state\r\n      await fetchUser();\r\n      profileUpdateSuccess.value = true;\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        profileUpdateSuccess.value = false;\r\n      }, 3000);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error updating profile:', err);\r\n    profileUpdateError.value = apiError.value || 'Failed to update profile. Please try again.';\r\n  }\r\n}\r\n\r\n// Update profile picture\r\nasync function updatePicture() {\r\n  pictureUpdateError.value = null;\r\n  pictureUpdateSuccess.value = false;\r\n\r\n  try {\r\n    if (!selectedFile.value) {\r\n      pictureUpdateError.value = 'Please select an image file.';\r\n      return;\r\n    }\r\n\r\n    // Upload file\r\n    const updatedProfile = await uploadProfilePicture(selectedFile.value);\r\n\r\n    if (updatedProfile) {\r\n      // Update local state\r\n      profilePicture.value = updatedProfile.profilePicture;\r\n      // Ensure user object is updated with the correct profilePicture\r\n      await fetchUser();\r\n\r\n      // Show success message\r\n      pictureUpdateSuccess.value = true;\r\n\r\n      // Reset form\r\n      selectedFile.value = null;\r\n      if (fileInput.value) {\r\n        fileInput.value.value = ''; // Clear file input\r\n      }\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        pictureUpdateSuccess.value = false;\r\n      }, 3000);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error updating profile picture:', err);\r\n    pictureUpdateError.value = apiError.value || 'Failed to update profile picture. Please try again.';\r\n  }\r\n}\r\n\r\n// Change password\r\nasync function changeUserPassword() {\r\n  if (passwordMismatch.value) {\r\n    return;\r\n  }\r\n\r\n  passwordChangeSuccess.value = false;\r\n  passwordChangeError.value = null;\r\n\r\n  try {\r\n    const result = await changePassword({\r\n      currentPassword: currentPassword.value,\r\n      newPassword: newPassword.value\r\n    });\r\n\r\n    if (result) {\r\n      // Clear password fields\r\n      currentPassword.value = '';\r\n      newPassword.value = '';\r\n      confirmPassword.value = '';\r\n\r\n      // Show success message\r\n      passwordChangeSuccess.value = true;\r\n\r\n      // Hide success message after 3 seconds\r\n      setTimeout(() => {\r\n        passwordChangeSuccess.value = false;\r\n      }, 3000);\r\n    }\r\n  } catch (err) {\r\n    console.error('Error changing password:', err);\r\n    passwordChangeError.value = apiError.value || 'Failed to change password. Please check your current password and try again.';\r\n  }\r\n}\r\n\r\n// Handle logout\r\nasync function handleLogout() {\r\n  await logout();\r\n  // The logout function already redirects to the login page\r\n}\r\n\r\n// Redirect if not authenticated\r\nonMounted(() => {\r\n  if (process.client && !isAuthenticated.value) {\r\n    router.push('/login');\r\n  } else {\r\n    loadUserProfile();\r\n  }\r\n});\r\n</script>\r\n"],"names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrRenderAttr","_ssrInterpolate","_push","_parent"],"mappings":"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"}